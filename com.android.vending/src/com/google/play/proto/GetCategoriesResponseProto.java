/*
 * Copyright (c) 2014 Î¼g Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Category.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class GetCategoriesResponseProto extends Message {

  public static final List<CategoryProto> DEFAULT_CATEGORIES = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<CategoryProto> categories;

  public GetCategoriesResponseProto(List<CategoryProto> categories) {
    this.categories = immutableCopyOf(categories);
  }

  private GetCategoriesResponseProto(Builder builder) {
    this(builder.categories);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetCategoriesResponseProto)) return false;
    return equals(categories, ((GetCategoriesResponseProto) other).categories);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = categories != null ? categories.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<GetCategoriesResponseProto> {

    public List<CategoryProto> categories;

    public Builder() {
    }

    public Builder(GetCategoriesResponseProto message) {
      super(message);
      if (message == null) return;
      this.categories = copyOf(message.categories);
    }

    public Builder categories(List<CategoryProto> categories) {
      this.categories = checkForNulls(categories);
      return this;
    }

    @Override
    public GetCategoriesResponseProto build() {
      return new GetCategoriesResponseProto(this);
    }
  }
}
