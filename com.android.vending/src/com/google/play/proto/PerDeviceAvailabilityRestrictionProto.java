/*
 * Copyright (c) 2014 Î¼g Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Offers.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.*;

public final class PerDeviceAvailabilityRestrictionProto extends Message {

  public static final Long DEFAULT_ANDROIDID = 0L;
  public static final Integer DEFAULT_DEVICERESTRICTION = 0;
  public static final Long DEFAULT_CHANNELID = 0L;

  @ProtoField(tag = 10, type = FIXED64)
  public final Long androidId;

  @ProtoField(tag = 11, type = INT32)
  public final Integer deviceRestriction;

  @ProtoField(tag = 12, type = INT64)
  public final Long channelId;

  @ProtoField(tag = 15)
  public final FilterEvaluationInfo filterInfo;

  public PerDeviceAvailabilityRestrictionProto(Long androidId, Integer deviceRestriction, Long channelId, FilterEvaluationInfo filterInfo) {
    this.androidId = androidId;
    this.deviceRestriction = deviceRestriction;
    this.channelId = channelId;
    this.filterInfo = filterInfo;
  }

  private PerDeviceAvailabilityRestrictionProto(Builder builder) {
    this(builder.androidId, builder.deviceRestriction, builder.channelId, builder.filterInfo);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PerDeviceAvailabilityRestrictionProto)) return false;
    PerDeviceAvailabilityRestrictionProto o = (PerDeviceAvailabilityRestrictionProto) other;
    return equals(androidId, o.androidId)
        && equals(deviceRestriction, o.deviceRestriction)
        && equals(channelId, o.channelId)
        && equals(filterInfo, o.filterInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = androidId != null ? androidId.hashCode() : 0;
      result = result * 37 + (deviceRestriction != null ? deviceRestriction.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (filterInfo != null ? filterInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PerDeviceAvailabilityRestrictionProto> {

    public Long androidId;
    public Integer deviceRestriction;
    public Long channelId;
    public FilterEvaluationInfo filterInfo;

    public Builder() {
    }

    public Builder(PerDeviceAvailabilityRestrictionProto message) {
      super(message);
      if (message == null) return;
      this.androidId = message.androidId;
      this.deviceRestriction = message.deviceRestriction;
      this.channelId = message.channelId;
      this.filterInfo = message.filterInfo;
    }

    public Builder androidId(Long androidId) {
      this.androidId = androidId;
      return this;
    }

    public Builder deviceRestriction(Integer deviceRestriction) {
      this.deviceRestriction = deviceRestriction;
      return this;
    }

    public Builder channelId(Long channelId) {
      this.channelId = channelId;
      return this;
    }

    public Builder filterInfo(FilterEvaluationInfo filterInfo) {
      this.filterInfo = filterInfo;
      return this;
    }

    @Override
    public PerDeviceAvailabilityRestrictionProto build() {
      return new PerDeviceAvailabilityRestrictionProto(this);
    }
  }
}
