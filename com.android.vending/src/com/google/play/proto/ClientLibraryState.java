/*
 * Copyright (c) 2014 Î¼g Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Library.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.*;

public final class ClientLibraryState extends Message {

  public static final Integer DEFAULT_CORPUS = 0;
  public static final ByteString DEFAULT_SERVERTOKEN = ByteString.EMPTY;
  public static final Long DEFAULT_HASHCODESUM = 0L;
  public static final Integer DEFAULT_LIBRARYSIZE = 0;
  public static final String DEFAULT_LIBRARYID = "";

  @ProtoField(tag = 1, type = INT32)
  public final Integer corpus;

  @ProtoField(tag = 2, type = BYTES)
  public final ByteString serverToken;

  @ProtoField(tag = 3, type = INT64)
  public final Long hashCodeSum;

  @ProtoField(tag = 4, type = INT32)
  public final Integer librarySize;

  @ProtoField(tag = 5, type = STRING)
  public final String libraryId;

  public ClientLibraryState(Integer corpus, ByteString serverToken, Long hashCodeSum, Integer librarySize, String libraryId) {
    this.corpus = corpus;
    this.serverToken = serverToken;
    this.hashCodeSum = hashCodeSum;
    this.librarySize = librarySize;
    this.libraryId = libraryId;
  }

  private ClientLibraryState(Builder builder) {
    this(builder.corpus, builder.serverToken, builder.hashCodeSum, builder.librarySize, builder.libraryId);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClientLibraryState)) return false;
    ClientLibraryState o = (ClientLibraryState) other;
    return equals(corpus, o.corpus)
        && equals(serverToken, o.serverToken)
        && equals(hashCodeSum, o.hashCodeSum)
        && equals(librarySize, o.librarySize)
        && equals(libraryId, o.libraryId);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = corpus != null ? corpus.hashCode() : 0;
      result = result * 37 + (serverToken != null ? serverToken.hashCode() : 0);
      result = result * 37 + (hashCodeSum != null ? hashCodeSum.hashCode() : 0);
      result = result * 37 + (librarySize != null ? librarySize.hashCode() : 0);
      result = result * 37 + (libraryId != null ? libraryId.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ClientLibraryState> {

    public Integer corpus;
    public ByteString serverToken;
    public Long hashCodeSum;
    public Integer librarySize;
    public String libraryId;

    public Builder() {
    }

    public Builder(ClientLibraryState message) {
      super(message);
      if (message == null) return;
      this.corpus = message.corpus;
      this.serverToken = message.serverToken;
      this.hashCodeSum = message.hashCodeSum;
      this.librarySize = message.librarySize;
      this.libraryId = message.libraryId;
    }

    public Builder corpus(Integer corpus) {
      this.corpus = corpus;
      return this;
    }

    public Builder serverToken(ByteString serverToken) {
      this.serverToken = serverToken;
      return this;
    }

    public Builder hashCodeSum(Long hashCodeSum) {
      this.hashCodeSum = hashCodeSum;
      return this;
    }

    public Builder librarySize(Integer librarySize) {
      this.librarySize = librarySize;
      return this;
    }

    public Builder libraryId(String libraryId) {
      this.libraryId = libraryId;
      return this;
    }

    @Override
    public ClientLibraryState build() {
      return new ClientLibraryState(this);
    }
  }
}
